{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fazil\\\\OneDrive\\\\Documents\\\\GitHub\\\\wgca-dobson1\\\\src\\\\pages\\\\Food.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ProductGrid from '../components/ProductGrid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Food() {\n  _s();\n  const [selectedQuantities, setSelectedQuantities] = useState({});\n  const [deliveryType, setDeliveryType] = useState('');\n  const products = [{\n    id: 1,\n    name: 'Hot Dog',\n    description: 'Classic all-beef hot dog',\n    price: 4.99,\n    image: '/food/hot-dog.jpg',\n    inStock: 100\n  }\n  // ... other food items\n  ];\n  const handleQuantityChange = (productId, quantity) => {\n    setSelectedQuantities(prev => ({\n      ...prev,\n      [productId]: quantity\n    }));\n  };\n  const handleDeliveryOption = type => {\n    setDeliveryType(type);\n    // Add any additional delivery logic here\n    console.log(`Selected delivery option: ${type}`);\n\n    // Example: Process the order with selected quantities and delivery type\n    const order = {\n      items: selectedQuantities,\n      deliveryType: type\n    };\n    console.log('Processing order:', order);\n  };\n  const deliveryOptions = [{\n    id: 'delivery',\n    label: 'Course Delivery',\n    onClick: () => handleDeliveryOption('delivery')\n  }, {\n    id: 'pickup',\n    label: 'Pickup at Turn',\n    onClick: () => handleDeliveryOption('pickup')\n  }];\n  return /*#__PURE__*/_jsxDEV(ProductGrid, {\n    title: \"Food & Drinks\",\n    subtitle: \"Order food and drinks for delivery on the course\",\n    products: products,\n    onQuantityChange: handleQuantityChange,\n    selectedQuantities: selectedQuantities,\n    deliveryOptions: deliveryOptions\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(Food, \"VUVKG3SMh9kNen5s3d1XXJkqTfI=\");\n_c = Food;\nexport default Food;\nvar _c;\n$RefreshReg$(_c, \"Food\");","map":{"version":3,"names":["React","useState","ProductGrid","jsxDEV","_jsxDEV","Food","_s","selectedQuantities","setSelectedQuantities","deliveryType","setDeliveryType","products","id","name","description","price","image","inStock","handleQuantityChange","productId","quantity","prev","handleDeliveryOption","type","console","log","order","items","deliveryOptions","label","onClick","title","subtitle","onQuantityChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/fazil/OneDrive/Documents/GitHub/wgca-dobson1/src/pages/Food.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport ProductGrid from '../components/ProductGrid';\r\n\r\nfunction Food() {\r\n  const [selectedQuantities, setSelectedQuantities] = useState({});\r\n  const [deliveryType, setDeliveryType] = useState('');\r\n\r\n  const products = [\r\n    {\r\n      id: 1,\r\n      name: 'Hot Dog',\r\n      description: 'Classic all-beef hot dog',\r\n      price: 4.99,\r\n      image: '/food/hot-dog.jpg',\r\n      inStock: 100\r\n    },\r\n    // ... other food items\r\n  ];\r\n\r\n  const handleQuantityChange = (productId, quantity) => {\r\n    setSelectedQuantities(prev => ({\r\n      ...prev,\r\n      [productId]: quantity\r\n    }));\r\n  };\r\n\r\n  const handleDeliveryOption = (type) => {\r\n    setDeliveryType(type);\r\n    // Add any additional delivery logic here\r\n    console.log(`Selected delivery option: ${type}`);\r\n    \r\n    // Example: Process the order with selected quantities and delivery type\r\n    const order = {\r\n      items: selectedQuantities,\r\n      deliveryType: type\r\n    };\r\n    console.log('Processing order:', order);\r\n  };\r\n\r\n  const deliveryOptions = [\r\n    {\r\n      id: 'delivery',\r\n      label: 'Course Delivery',\r\n      onClick: () => handleDeliveryOption('delivery')\r\n    },\r\n    {\r\n      id: 'pickup',\r\n      label: 'Pickup at Turn',\r\n      onClick: () => handleDeliveryOption('pickup')\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <ProductGrid\r\n      title=\"Food & Drinks\"\r\n      subtitle=\"Order food and drinks for delivery on the course\"\r\n      products={products}\r\n      onQuantityChange={handleQuantityChange}\r\n      selectedQuantities={selectedQuantities}\r\n      deliveryOptions={deliveryOptions}\r\n    />\r\n  );\r\n}\r\n\r\nexport default Food; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,WAAW,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC,CAAC;EAChE,MAAM,CAACQ,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAMU,QAAQ,GAAG,CACf;IACEC,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE,SAAS;IACfC,WAAW,EAAE,0BAA0B;IACvCC,KAAK,EAAE,IAAI;IACXC,KAAK,EAAE,mBAAmB;IAC1BC,OAAO,EAAE;EACX;EACA;EAAA,CACD;EAED,MAAMC,oBAAoB,GAAGA,CAACC,SAAS,EAAEC,QAAQ,KAAK;IACpDZ,qBAAqB,CAACa,IAAI,KAAK;MAC7B,GAAGA,IAAI;MACP,CAACF,SAAS,GAAGC;IACf,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAME,oBAAoB,GAAIC,IAAI,IAAK;IACrCb,eAAe,CAACa,IAAI,CAAC;IACrB;IACAC,OAAO,CAACC,GAAG,CAAC,6BAA6BF,IAAI,EAAE,CAAC;;IAEhD;IACA,MAAMG,KAAK,GAAG;MACZC,KAAK,EAAEpB,kBAAkB;MACzBE,YAAY,EAAEc;IAChB,CAAC;IACDC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEC,KAAK,CAAC;EACzC,CAAC;EAED,MAAME,eAAe,GAAG,CACtB;IACEhB,EAAE,EAAE,UAAU;IACdiB,KAAK,EAAE,iBAAiB;IACxBC,OAAO,EAAEA,CAAA,KAAMR,oBAAoB,CAAC,UAAU;EAChD,CAAC,EACD;IACEV,EAAE,EAAE,QAAQ;IACZiB,KAAK,EAAE,gBAAgB;IACvBC,OAAO,EAAEA,CAAA,KAAMR,oBAAoB,CAAC,QAAQ;EAC9C,CAAC,CACF;EAED,oBACElB,OAAA,CAACF,WAAW;IACV6B,KAAK,EAAC,eAAe;IACrBC,QAAQ,EAAC,kDAAkD;IAC3DrB,QAAQ,EAAEA,QAAS;IACnBsB,gBAAgB,EAAEf,oBAAqB;IACvCX,kBAAkB,EAAEA,kBAAmB;IACvCqB,eAAe,EAAEA;EAAgB;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClC,CAAC;AAEN;AAAC/B,EAAA,CA3DQD,IAAI;AAAAiC,EAAA,GAAJjC,IAAI;AA6Db,eAAeA,IAAI;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}